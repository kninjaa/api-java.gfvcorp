/*
 * api_java_gfvcorp API
 * api_java_gfvcorp API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RrequestModal
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-13T13:06:09.898871600-03:00[America/Sao_Paulo]")
public class RrequestModal {
  public static final String SERIALIZED_NAME_MODAL = "modal";
  @SerializedName(SERIALIZED_NAME_MODAL)
  private String modal;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_TYPE_TOW = "typeTow";
  @SerializedName(SERIALIZED_NAME_TYPE_TOW)
  private String typeTow;

  public static final String SERIALIZED_NAME_PROTOCOL = "protocol";
  @SerializedName(SERIALIZED_NAME_PROTOCOL)
  private Integer protocol;

  public static final String SERIALIZED_NAME_CLIENT = "client";
  @SerializedName(SERIALIZED_NAME_CLIENT)
  private Integer client;

  public static final String SERIALIZED_NAME_VEHICLE = "vehicle";
  @SerializedName(SERIALIZED_NAME_VEHICLE)
  private Integer vehicle;

  public RrequestModal() {
  }

  public RrequestModal modal(String modal) {
    
    this.modal = modal;
    return this;
  }

   /**
   * Get modal
   * @return modal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getModal() {
    return modal;
  }


  public void setModal(String modal) {
    this.modal = modal;
  }


  public RrequestModal location(String location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    this.location = location;
  }


  public RrequestModal typeTow(String typeTow) {
    
    this.typeTow = typeTow;
    return this;
  }

   /**
   * Get typeTow
   * @return typeTow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTypeTow() {
    return typeTow;
  }


  public void setTypeTow(String typeTow) {
    this.typeTow = typeTow;
  }


  public RrequestModal protocol(Integer protocol) {
    
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProtocol() {
    return protocol;
  }


  public void setProtocol(Integer protocol) {
    this.protocol = protocol;
  }


  public RrequestModal client(Integer client) {
    
    this.client = client;
    return this;
  }

   /**
   * Get client
   * @return client
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getClient() {
    return client;
  }


  public void setClient(Integer client) {
    this.client = client;
  }


  public RrequestModal vehicle(Integer vehicle) {
    
    this.vehicle = vehicle;
    return this;
  }

   /**
   * Get vehicle
   * @return vehicle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getVehicle() {
    return vehicle;
  }


  public void setVehicle(Integer vehicle) {
    this.vehicle = vehicle;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RrequestModal rrequestModal = (RrequestModal) o;
    return Objects.equals(this.modal, rrequestModal.modal) &&
        Objects.equals(this.location, rrequestModal.location) &&
        Objects.equals(this.typeTow, rrequestModal.typeTow) &&
        Objects.equals(this.protocol, rrequestModal.protocol) &&
        Objects.equals(this.client, rrequestModal.client) &&
        Objects.equals(this.vehicle, rrequestModal.vehicle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modal, location, typeTow, protocol, client, vehicle);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RrequestModal {\n");
    sb.append("    modal: ").append(toIndentedString(modal)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    typeTow: ").append(toIndentedString(typeTow)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    vehicle: ").append(toIndentedString(vehicle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("modal");
    openapiFields.add("location");
    openapiFields.add("typeTow");
    openapiFields.add("protocol");
    openapiFields.add("client");
    openapiFields.add("vehicle");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RrequestModal
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (RrequestModal.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in RrequestModal is not found in the empty JSON string", RrequestModal.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!RrequestModal.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RrequestModal` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("modal") != null && !jsonObj.get("modal").isJsonNull()) && !jsonObj.get("modal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modal").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("typeTow") != null && !jsonObj.get("typeTow").isJsonNull()) && !jsonObj.get("typeTow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typeTow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typeTow").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RrequestModal.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RrequestModal' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RrequestModal> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RrequestModal.class));

       return (TypeAdapter<T>) new TypeAdapter<RrequestModal>() {
           @Override
           public void write(JsonWriter out, RrequestModal value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RrequestModal read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RrequestModal given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RrequestModal
  * @throws IOException if the JSON string is invalid with respect to RrequestModal
  */
  public static RrequestModal fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RrequestModal.class);
  }

 /**
  * Convert an instance of RrequestModal to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

